const { Telegraf } = require('telegraf');
const store = require('app-store-scraper');
const fs = require('fs').promises;
const path = require('path');
const axios = require('axios');
const cheerio = require('cheerio');

// –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
const BOT_TOKEN = process.env.BOT_TOKEN || '7624758051:AAGjLs1BLaF43CjTjPIwd3pJlKvprNaenZA';

// ID –ø–æ–¥–∫–∞—Å—Ç–∞ "–î–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–≥–æ"
const PODCAST_ID = process.env.PODCAST_ID || '1371411915';

// URLs –ø–æ–¥–∫–∞—Å—Ç–∞ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
const PODCAST_URLS = {
    google: 'https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkLnBvZGJlYW4uY29tL3R3by1mb3Itb25lL2ZlZWQueG1s',
    castbox: 'https://castbox.fm/channel/id1371411915',
    overcast: 'https://overcast.fm/itunes1371411915',
    pocketcasts: 'https://pca.st/itunes/1371411915'
};

// –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Ü–µ–Ω–∑–∏–π (—Ç–æ–ø 50 —Å—Ç—Ä–∞–Ω –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ Apple Store)
const COUNTRIES = [
    { code: 'us', name: '–°–®–ê' },
    { code: 'gb', name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è' },
    { code: 'ca', name: '–ö–∞–Ω–∞–¥–∞' },
    { code: 'au', name: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è' },
    { code: 'de', name: '–ì–µ—Ä–º–∞–Ω–∏—è' },
    { code: 'fr', name: '–§—Ä–∞–Ω—Ü–∏—è' },
    { code: 'it', name: '–ò—Ç–∞–ª–∏—è' },
    { code: 'es', name: '–ò—Å–ø–∞–Ω–∏—è' },
    { code: 'ru', name: '–†–æ—Å—Å–∏—è' },
    { code: 'jp', name: '–Ø–ø–æ–Ω–∏—è' },
    { code: 'kr', name: '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è' },
    { code: 'cn', name: '–ö–∏—Ç–∞–π' },
    { code: 'in', name: '–ò–Ω–¥–∏—è' },
    { code: 'br', name: '–ë—Ä–∞–∑–∏–ª–∏—è' },
    { code: 'mx', name: '–ú–µ–∫—Å–∏–∫–∞' },
    { code: 'ar', name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞' },
    { code: 'cl', name: '–ß–∏–ª–∏' },
    { code: 'co', name: '–ö–æ–ª—É–º–±–∏—è' },
    { code: 'pe', name: '–ü–µ—Ä—É' },
    { code: 'nl', name: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã' },
    { code: 'be', name: '–ë–µ–ª—å–≥–∏—è' },
    { code: 'ch', name: '–®–≤–µ–π—Ü–∞—Ä–∏—è' },
    { code: 'at', name: '–ê–≤—Å—Ç—Ä–∏—è' },
    { code: 'se', name: '–®–≤–µ—Ü–∏—è' },
    { code: 'no', name: '–ù–æ—Ä–≤–µ–≥–∏—è' },
    { code: 'dk', name: '–î–∞–Ω–∏—è' },
    { code: 'fi', name: '–§–∏–Ω–ª—è–Ω–¥–∏—è' },
    { code: 'pl', name: '–ü–æ–ª—å—à–∞' },
    { code: 'cz', name: '–ß–µ—Ö–∏—è' },
    { code: 'hu', name: '–í–µ–Ω–≥—Ä–∏—è' },
    { code: 'sk', name: '–°–ª–æ–≤–∞–∫–∏—è' },
    { code: 'si', name: '–°–ª–æ–≤–µ–Ω–∏—è' },
    { code: 'hr', name: '–•–æ—Ä–≤–∞—Ç–∏—è' },
    { code: 'bg', name: '–ë–æ–ª–≥–∞—Ä–∏—è' },
    { code: 'ro', name: '–†—É–º—ã–Ω–∏—è' },
    { code: 'lt', name: '–õ–∏—Ç–≤–∞' },
    { code: 'lv', name: '–õ–∞—Ç–≤–∏—è' },
    { code: 'ee', name: '–≠—Å—Ç–æ–Ω–∏—è' },
    { code: 'ua', name: '–£–∫—Ä–∞–∏–Ω–∞' },
    { code: 'by', name: '–ë–µ–ª–∞—Ä—É—Å—å' },
    { code: 'kz', name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω' },
    { code: 'uz', name: '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω' },
    { code: 'kg', name: '–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω' },
    { code: 'tj', name: '–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω' },
    { code: 'tm', name: '–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω' },
    { code: 'az', name: '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω' },
    { code: 'ge', name: '–ì—Ä—É–∑–∏—è' },
    { code: 'am', name: '–ê—Ä–º–µ–Ω–∏—è' },
    { code: 'md', name: '–ú–æ–ª–¥–æ–≤–∞' },
    { code: 'rs', name: '–°–µ—Ä–±–∏—è' },
    { code: 'me', name: '–ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è' },
    { code: 'mk', name: '–°–µ–≤–µ—Ä–Ω–∞—è –ú–∞–∫–µ–¥–æ–Ω–∏—è' },
    { code: 'ba', name: '–ë–æ—Å–Ω–∏—è –∏ –ì–µ—Ä—Ü–µ–≥–æ–≤–∏–Ω–∞' },
    { code: 'al', name: '–ê–ª–±–∞–Ω–∏—è' },
    { code: 'il', name: '–ò–∑—Ä–∞–∏–ª—å' },
    { code: 'tr', name: '–¢—É—Ä—Ü–∏—è' },
    { code: 'sa', name: '–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è' },
    { code: 'ae', name: '–û–ê–≠' },
    { code: 'eg', name: '–ï–≥–∏–ø–µ—Ç' },
    { code: 'za', name: '–Æ–ê–†' },
    { code: 'ng', name: '–ù–∏–≥–µ—Ä–∏—è' },
    { code: 'ke', name: '–ö–µ–Ω–∏—è' },
    { code: 'th', name: '–¢–∞–∏–ª–∞–Ω–¥' },
    { code: 'vn', name: '–í—å–µ—Ç–Ω–∞–º' },
    { code: 'sg', name: '–°–∏–Ω–≥–∞–ø—É—Ä' },
    { code: 'my', name: '–ú–∞–ª–∞–π–∑–∏—è' },
    { code: 'id', name: '–ò–Ω–¥–æ–Ω–µ–∑–∏—è' },
    { code: 'ph', name: '–§–∏–ª–∏–ø–ø–∏–Ω—ã' },
    { code: 'nz', name: '–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è' },
    { code: 'pt', name: '–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è' },
    { code: 'gr', name: '–ì—Ä–µ—Ü–∏—è' },
    { code: 'cy', name: '–ö–∏–ø—Ä' },
    { code: 'mt', name: '–ú–∞–ª—å—Ç–∞' },
    { code: 'lu', name: '–õ—é–∫—Å–µ–º–±—É—Ä–≥' },
    { code: 'ie', name: '–ò—Ä–ª–∞–Ω–¥–∏—è' },
    { code: 'is', name: '–ò—Å–ª–∞–Ω–¥–∏—è' }
];

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–π –ø–æ–¥–∫–∞—Å—Ç–∞ –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω
async function getPodcastReviews(ctx, limit = 20) {
    try {
        console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–π –ø–æ–¥–∫–∞—Å—Ç–∞ –∏–∑ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω...');
        
        const allReviews = [];
        let processedCountries = 0;
        let totalCountries = COUNTRIES.length;
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        const progressMessage = await ctx.reply(`üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ —Ä–µ—Ü–µ–Ω–∑–∏–π...\n–ü—Ä–æ–≤–µ—Ä—è—é ${totalCountries} —Å—Ç—Ä–∞–Ω. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã.`);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∏–∑ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã
        for (const country of COUNTRIES) {
            try {
                console.log(`–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${country.name} (${country.code})...`);
                
                const reviews = await store.reviews({
                    id: PODCAST_ID,
                    country: country.code,
                    page: 1,
                    sort: store.sort.RECENT
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–µ –∫ –∫–∞–∂–¥–æ–π —Ä–µ—Ü–µ–Ω–∑–∏–∏
                const reviewsWithCountry = reviews.map(review => ({
                    ...review,
                    countryCode: country.code,
                    countryName: country.name
                }));
                
                allReviews.push(...reviewsWithCountry);
                console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${reviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${country.name}`);
                
                processedCountries++;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å—Ç—Ä–∞–Ω
                if (processedCountries % 10 === 0 || processedCountries === totalCountries) {
                    try {
                        await ctx.telegram.editMessageText(
                            progressMessage.chat.id,
                            progressMessage.message_id,
                            null,
                            `üîç –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–Ω–∑–∏–π: ${processedCountries}/${totalCountries} —Å—Ç—Ä–∞–Ω –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ\nüìä –ù–∞–π–¥–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π`
                        );
                    } catch (editError) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                    }
                }
                
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API
                await new Promise(resolve => setTimeout(resolve, 150));
                
            } catch (countryError) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${country.name}:`, countryError.message);
                processedCountries++;
                // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏
            }
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        allReviews.sort((a, b) => {
            const dateA = new Date(a.updated || 0);
            const dateB = new Date(b.updated || 0);
            return dateB - dateA;
        });
        
        // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ
        const latestReviews = allReviews.slice(0, limit);
        
        console.log(`–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${COUNTRIES.length} —Å—Ç—Ä–∞–Ω`);
        console.log(`–û—Ç–æ–±—Ä–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö ${latestReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π`);
        
        // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞
        try {
            await ctx.telegram.editMessageText(
                progressMessage.chat.id,
                progressMessage.message_id,
                null,
                `‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!\nüìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ ${totalCountries} —Å—Ç—Ä–∞–Ω\nüìù –ù–∞–π–¥–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π\n‚≠ê –û—Ç–æ–±—Ä–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö ${latestReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π`
            );
        } catch (editError) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        }
        
        return latestReviews;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–Ω–∑–∏–π:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
async function getMonthlyReviews(ctx) {
    try {
        console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü...');
        
        const allReviews = [];
        let processedCountries = 0;
        let totalCountries = COUNTRIES.length;
        const oneMonthAgo = new Date();
        oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        const progressMessage = await ctx.reply(`üóìÔ∏è –ò—â—É —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü...\n–ü—Ä–æ–≤–µ—Ä—è—é ${totalCountries} —Å—Ç—Ä–∞–Ω. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 1-2 –º–∏–Ω—É—Ç—ã.`);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∏–∑ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã
        for (const country of COUNTRIES) {
            try {
                console.log(`–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${country.name} (${country.code})...`);
                
                const reviews = await store.reviews({
                    id: PODCAST_ID,
                    country: country.code,
                    page: 1,
                    sort: store.sort.RECENT
                });

                // –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
                const monthlyReviews = reviews.filter(review => {
                    if (!review.updated) return false;
                    const reviewDate = new Date(review.updated);
                    return reviewDate >= oneMonthAgo;
                });

                // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–µ –∫ –∫–∞–∂–¥–æ–π —Ä–µ—Ü–µ–Ω–∑–∏–∏
                const reviewsWithCountry = monthlyReviews.map(review => ({
                    ...review,
                    countryCode: country.code,
                    countryName: country.name
                }));
                
                allReviews.push(...reviewsWithCountry);
                console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${monthlyReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –º–µ—Å—è—Ü –∏–∑ ${country.name}`);
                
                processedCountries++;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å—Ç—Ä–∞–Ω
                if (processedCountries % 10 === 0 || processedCountries === totalCountries) {
                    try {
                        await ctx.telegram.editMessageText(
                            progressMessage.chat.id,
                            progressMessage.message_id,
                            null,
                            `üóìÔ∏è –ü–æ–∏—Å–∫ –º–µ—Å—è—á–Ω—ã—Ö —Ä–µ—Ü–µ–Ω–∑–∏–π: ${processedCountries}/${totalCountries} —Å—Ç—Ä–∞–Ω –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ\nüìä –ù–∞–π–¥–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –º–µ—Å—è—Ü`
                        );
                    } catch (editError) {
                        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                    }
                }
                
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                await new Promise(resolve => setTimeout(resolve, 150));
                
            } catch (countryError) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ ${country.name}:`, countryError.message);
                processedCountries++;
            }
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ –ø–µ—Ä–≤—ã–º–∏)
        allReviews.sort((a, b) => {
            const dateA = new Date(a.updated || 0);
            const dateB = new Date(b.updated || 0);
            return dateB - dateA;
        });
        
        console.log(`–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –º–µ—Å—è—Ü –∏–∑ ${COUNTRIES.length} —Å—Ç—Ä–∞–Ω`);
        
        // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞
        try {
            await ctx.telegram.editMessageText(
                progressMessage.chat.id,
                progressMessage.message_id,
                null,
                `‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!\nüìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ ${totalCountries} —Å—Ç—Ä–∞–Ω\nüìù –ù–∞–π–¥–µ–Ω–æ ${allReviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü`
            );
        } catch (editError) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
        }
        
        return allReviews;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—è—á–Ω—ã—Ö —Ä–µ—Ü–µ–Ω–∑–∏–π:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Google Podcasts (—á–µ—Ä–µ–∑ RSS –∏ –ø–æ–∏—Å–∫)
async function getGooglePodcastsReviews() {
    try {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Google Podcasts...');
        // Google Podcasts –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —á–µ—Ä–µ–∑ API
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        return [{
            id: 'google_info',
            title: 'Google Podcasts',
            text: 'Google Podcasts –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –æ—Ç–∑—ã–≤—ã. –ü–æ–¥–∫–∞—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Google Podcasts.',
            score: null,
            userName: '–°–∏—Å—Ç–µ–º–∞',
            updated: new Date().toISOString(),
            countryCode: 'global',
            countryName: 'Google Podcasts',
            source: 'Google Podcasts'
        }];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Google Podcasts:', error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Castbox
async function getCastboxReviews() {
    try {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Castbox...');
        
        // Castbox –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –æ—Ç–∑—ã–≤—ã —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π HTTP –∑–∞–ø—Ä–æ—Å
        // –î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º
        return [{
            id: 'castbox_info',
            title: 'Castbox',
            text: '–ü–æ–¥–∫–∞—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Castbox. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Castbox —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞.',
            score: null,
            userName: '–°–∏—Å—Ç–µ–º–∞',
            updated: new Date().toISOString(),
            countryCode: 'global',
            countryName: 'Castbox',
            source: 'Castbox'
        }];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Castbox:', error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Overcast
async function getOvercastReviews() {
    try {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Overcast...');
        
        // Overcast —Ç–∞–∫–∂–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
        return [{
            id: 'overcast_info',
            title: 'Overcast',
            text: '–ü–æ–¥–∫–∞—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Overcast. Overcast –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.',
            score: null,
            userName: '–°–∏—Å—Ç–µ–º–∞',
            updated: new Date().toISOString(),
            countryCode: 'global',
            countryName: 'Overcast',
            source: 'Overcast'
        }];
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ Overcast:', error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
async function getAllSourcesReviews(ctx, limit = 20) {
    try {
        console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...');
        
        const progressMessage = await ctx.reply(`üåê –°–æ–±–∏—Ä–∞—é –æ—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-3 –º–∏–Ω—É—Ç—ã.`);
        
        const allReviews = [];
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã –∏–∑ Apple Podcasts
        try {
            await ctx.telegram.editMessageText(
                progressMessage.chat.id,
                progressMessage.message_id,
                null,
                `üåê –ü–æ–ª—É—á–∞—é –æ—Ç–∑—ã–≤—ã –∏–∑ Apple Podcasts (73 —Å—Ç—Ä–∞–Ω—ã)...`
            );
            
            const appleReviews = await getPodcastReviews(ctx, 50); // –ë–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Apple
            allReviews.push(...appleReviews);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ Apple:', error);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        try {
            await ctx.telegram.editMessageText(
                progressMessage.chat.id,
                progressMessage.message_id,
                null,
                `üåê –ü—Ä–æ–≤–µ—Ä—è—é –¥—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: Google Podcasts, Castbox, Overcast...`
            );
            
            const [googleReviews, castboxReviews, overcastReviews] = await Promise.all([
                getGooglePodcastsReviews(),
                getCastboxReviews(),
                getOvercastReviews()
            ]);
            
            allReviews.push(...googleReviews, ...castboxReviews, ...overcastReviews);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', error);
        }
        
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫—É
        allReviews.sort((a, b) => {
            // –°–Ω–∞—á–∞–ª–∞ Apple Podcasts –æ—Ç–∑—ã–≤—ã (—É –Ω–∏—Ö –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞—Ç—ã)
            if (a.source && b.source) {
                if (a.source === 'Apple Podcasts' && b.source !== 'Apple Podcasts') return -1;
                if (a.source !== 'Apple Podcasts' && b.source === 'Apple Podcasts') return 1;
            }
            
            const dateA = new Date(a.updated || 0);
            const dateB = new Date(b.updated || 0);
            return dateB - dateA;
        });
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        const limitedReviews = allReviews.slice(0, limit);
        
        await ctx.telegram.editMessageText(
            progressMessage.chat.id,
            progressMessage.message_id,
            null,
            `‚úÖ –°–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!\nüì± Apple Podcasts: ${allReviews.filter(r => !r.source || r.source === 'Apple Podcasts').length} –æ—Ç–∑—ã–≤–æ–≤\nüåê –î—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: ${allReviews.filter(r => r.source && r.source !== 'Apple Podcasts').length} –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ\n‚≠ê –û—Ç–æ–±—Ä–∞–Ω–æ: ${limitedReviews.length} –∑–∞–ø–∏—Å–µ–π`
        );
        
        return limitedReviews;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', error);
        throw error;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function cleanText(text) {
    if (!text) return text;
    // –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —ç–º–æ–¥–∑–∏
    return text.replace(/\r?\n|\r/g, ' ').replace(/\s+/g, ' ').trim();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ Markdown, –Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
function escapeMarkdownKeepEmoji(text) {
    if (!text) return text;
    // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown, –Ω–µ —Ç—Ä–æ–≥–∞—è —ç–º–æ–¥–∑–∏
    return text.replace(/([_*\[\]()~`>#+=|{}.!-])/g, '\\$1');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown
function escapeMarkdown(text) {
    if (!text) return text;
    // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è Markdown
    return text.replace(/([_`\[\]])/g, '\\$1');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–∏ –≤ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
function formatReviewMessage(review, index) {
    let message = `üìù –†–µ—Ü–µ–Ω–∑–∏—è ${index + 1}\n\n`;
    message += `üìå *${escapeMarkdown(cleanText(review.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))}*\n`;
    message += `üë§ –ê–≤—Ç–æ—Ä: ${escapeMarkdown(cleanText(review.userName || '–ê–Ω–æ–Ω–∏–º'))}\n`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
    if (review.source) {
        const sourceEmoji = {
            'Apple Podcasts': 'üçé',
            'Google Podcasts': 'üéß',
            'Castbox': 'üì¶',
            'Overcast': '‚òÅÔ∏è',
            'Pocket Casts': 'üéôÔ∏è'
        };
        message += `${sourceEmoji[review.source] || 'üì±'} –ò—Å—Ç–æ—á–Ω–∏–∫: ${review.source}\n`;
    } else {
        message += `üåç –°—Ç—Ä–∞–Ω–∞: ${review.countryName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} (${review.countryCode || '?'})\n`;
    }
    
    if (review.score !== null && review.score !== undefined) {
        message += `‚≠ê –û—Ü–µ–Ω–∫–∞: ${'‚òÖ'.repeat(review.score || 0)}${'‚òÜ'.repeat(5 - (review.score || 0))} (${review.score || 0}/5)\n`;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ updated
    let dateStr = '–î–∞—Ç–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞';
    if (review.updated) {
        const date = new Date(review.updated);
        dateStr = date.toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: 'long', 
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    } else if (review.date) {
        const date = new Date(review.date);
        dateStr = date.toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: 'long', 
            day: 'numeric'
        });
    }
    message += `üìÖ –î–∞—Ç–∞: ${dateStr}\n\n`;
    
    message += `üí¨ *–¢–µ–∫—Å—Ç —Ä–µ—Ü–µ–Ω–∑–∏–∏:*\n${escapeMarkdown(cleanText(review.text || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'))}`;
    
    return message;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start((ctx) => {
    ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ü–µ–Ω–∑–∏–π –ø–æ–¥–∫–∞—Å—Ç–∞ "–î–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–≥–æ".\n\n' +
        '–ö–æ–º–∞–Ω–¥—ã:\n' +
        '/reviews - –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ Apple Podcasts\n' +
        '/month - –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü\n' +
        '/all - –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (Apple, Google, Castbox, Overcast)\n' +
        '/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É'
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.help((ctx) => {
    ctx.reply(
        '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n' +
        'üçé /reviews - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Ä–µ—Ü–µ–Ω–∑–∏–π –∏–∑ Apple Podcasts\n' +
        'üóìÔ∏è /month - –≤—Å–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü\n' +
        'üåê /all - –æ—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (Apple, Google, Castbox, Overcast)\n' +
        '‚ùì /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n' +
        '–ü–æ–¥–∫–∞—Å—Ç: "–î–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–≥–æ"\n' +
        'üçé Apple Podcasts: –ø–æ–∏—Å–∫ –≤ 73 —Å—Ç—Ä–∞–Ω–∞—Ö\n' +
        'üéß Google Podcasts: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏\n' +
        'üì¶ Castbox: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏\n' +
        '‚òÅÔ∏è Overcast: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏'
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /reviews
bot.command('reviews', async (ctx) => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–Ω–∑–∏–∏ (—Ñ—É–Ω–∫—Ü–∏—è —Å–∞–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å)
        const reviews = await getPodcastReviews(ctx);
        
        if (reviews.length === 0) {
            await ctx.reply('–†–µ—Ü–µ–Ω–∑–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(`üéß *–ü–æ—Å–ª–µ–¥–Ω–∏–µ ${reviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –ø–æ–¥–∫–∞—Å—Ç–∞ "–î–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–≥–æ"*\n\n–û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ –æ–¥–Ω–æ–π —Ä–µ—Ü–µ–Ω–∑–∏–∏\\.\\.\\.`, { parse_mode: 'MarkdownV2' });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ä–µ—Ü–µ–Ω–∑–∏—é –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        for (let i = 0; i < reviews.length; i++) {
            const reviewMessage = formatReviewMessage(reviews[i], i);
            
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å Markdown —Ä–µ–∂–∏–º–æ–º –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                await ctx.reply(reviewMessage, { parse_mode: 'Markdown' });
                
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram
                if (i < reviews.length - 1) {
                    await new Promise(resolve => setTimeout(resolve, 300));
                }
            } catch (msgError) {
                console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ü–µ–Ω–∑–∏–∏ ${i + 1}:`, msgError);
                // –ï—Å–ª–∏ Markdown –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                try {
                    const plainMessage = reviewMessage.replace(/\*/g, '');
                    await ctx.reply(plainMessage);
                } catch (plainError) {
                    // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
                    const simpleMessage = `–†–µ—Ü–µ–Ω–∑–∏—è ${i + 1}\n\n${reviews[i].title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–ê–≤—Ç–æ—Ä: ${reviews[i].userName || '–ê–Ω–æ–Ω–∏–º'}\n–°—Ç—Ä–∞–Ω–∞: ${reviews[i].countryName}\n–û—Ü–µ–Ω–∫–∞: ${reviews[i].score}/5\n\n${reviews[i].text || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`;
                    await ctx.reply(simpleMessage);
                }
            }
        }
        
        await ctx.reply(`‚úÖ –í—Å–µ ${reviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /reviews:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ü–µ–Ω–∑–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /month
bot.command('month', async (ctx) => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –º–µ—Å—è—á–Ω—ã–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏
        const reviews = await getMonthlyReviews(ctx);
        
        if (reviews.length === 0) {
            await ctx.reply('–†–µ—Ü–µ–Ω–∑–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(`üóìÔ∏è *–í—Å–µ ${reviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü –ø–æ–¥–∫–∞—Å—Ç–∞ "–î–≤–∞ –ø–æ —Ü–µ–Ω–µ –æ–¥–Ω–æ–≥–æ"*\n\n–û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ –æ–¥–Ω–æ–π —Ä–µ—Ü–µ–Ω–∑–∏–∏\\.\\.\\.`, { parse_mode: 'MarkdownV2' });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ä–µ—Ü–µ–Ω–∑–∏—é –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        for (let i = 0; i < reviews.length; i++) {
            const reviewMessage = formatReviewMessage(reviews[i], i);
            
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å Markdown —Ä–µ–∂–∏–º–æ–º –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                await ctx.reply(reviewMessage, { parse_mode: 'Markdown' });
                
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram
                if (i < reviews.length - 1) {
                    await new Promise(resolve => setTimeout(resolve, 200));
                }
            } catch (msgError) {
                console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ü–µ–Ω–∑–∏–∏ ${i + 1}:`, msgError);
                // –ï—Å–ª–∏ Markdown –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                try {
                    const plainMessage = reviewMessage.replace(/\*/g, '');
                    await ctx.reply(plainMessage);
                } catch (plainError) {
                    // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
                    const simpleMessage = `–†–µ—Ü–µ–Ω–∑–∏—è ${i + 1}\n\n${reviews[i].title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–ê–≤—Ç–æ—Ä: ${reviews[i].userName || '–ê–Ω–æ–Ω–∏–º'}\n–°—Ç—Ä–∞–Ω–∞: ${reviews[i].countryName}\n–û—Ü–µ–Ω–∫–∞: ${reviews[i].score}/5\n\n${reviews[i].text || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`;
                    await ctx.reply(simpleMessage);
                }
            }
        }
        
        await ctx.reply(`‚úÖ –í—Å–µ ${reviews.length} —Ä–µ—Ü–µ–Ω–∑–∏–π –∑–∞ –º–µ—Å—è—Ü –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /month:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Å—è—á–Ω—ã—Ö —Ä–µ—Ü–µ–Ω–∑–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /all
bot.command('all', async (ctx) => {
    try {
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        const reviews = await getAllSourcesReviews(ctx, 25);
        
        if (reviews.length === 0) {
            await ctx.reply('–û—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return;
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(`üåê *–û—Ç–∑—ã–≤—ã –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${reviews.length} –∑–∞–ø–∏—Å–µ–π*\n\nüçé Apple Podcasts \\+ üéß Google Podcasts \\+ üì¶ Castbox \\+ ‚òÅÔ∏è Overcast\n\n–û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏\\.\\.\\.`, { parse_mode: 'MarkdownV2' });
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–∑—ã–≤ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        for (let i = 0; i < reviews.length; i++) {
            const reviewMessage = formatReviewMessage(reviews[i], i);
            
            try {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å Markdown —Ä–µ–∂–∏–º–æ–º –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                await ctx.reply(reviewMessage, { parse_mode: 'Markdown' });
                
                // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                if (i < reviews.length - 1) {
                    await new Promise(resolve => setTimeout(resolve, 250));
                }
            } catch (msgError) {
                console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø–∏—Å–∏ ${i + 1}:`, msgError);
                // –ï—Å–ª–∏ Markdown –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                try {
                    const plainMessage = reviewMessage.replace(/\*/g, '');
                    await ctx.reply(plainMessage);
                } catch (plainError) {
                    // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
                    const simpleMessage = `–ó–∞–ø–∏—Å—å ${i + 1}\n\n${reviews[i].title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n–ê–≤—Ç–æ—Ä: ${reviews[i].userName || '–ê–Ω–æ–Ω–∏–º'}\n–ò—Å—Ç–æ—á–Ω–∏–∫: ${reviews[i].source || reviews[i].countryName}\n\n${reviews[i].text || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}`;
                    await ctx.reply(simpleMessage);
                }
            }
        }
        
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        const appleCount = reviews.filter(r => !r.source || r.source === 'Apple Podcasts').length;
        const otherCount = reviews.filter(r => r.source && r.source !== 'Apple Podcasts').length;
        
        await ctx.reply(`‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!\n\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\nüçé Apple Podcasts: ${appleCount} –æ—Ç–∑—ã–≤–æ–≤\nüåê –î—Ä—É–≥–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏: ${otherCount} –∑–∞–ø–∏—Å–µ–π`);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /all:', error);
        await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
bot.on('text', (ctx) => {
    ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', err);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
const PORT = process.env.PORT || 3000;

bot.launch().then(() => {
    console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
}).catch(err => {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', err);
});

// –ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway
const http = require('http');
const server = http.createServer((req, res) => {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Telegram Bot is running!');
});

server.listen(PORT, () => {
    console.log(`HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});

// Graceful shutdown
process.once('SIGINT', () => {
    server.close();
    bot.stop('SIGINT');
});
process.once('SIGTERM', () => {
    server.close();
    bot.stop('SIGTERM');
});
